name: CI-CD (Build & Deploy to Tomcat)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  # pom.xml 이 있는 폴더 (루트가 아닌 CONNECT/ 하위)
  PROJECT_DIR: CONNECT

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show tree (debug)
        run: |
          echo "CWD=$(pwd)"
          ls -al
          echo "---- PROJECT_DIR ----"
          ls -al "${{ env.PROJECT_DIR }}" || true

      - name: Setup JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "8"
          cache: maven

      - name: Build (skip tests)
        working-directory: ${{ env.PROJECT_DIR }}
        run: mvn -B -DskipTests clean package

      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-war
          path: ${{ env.PROJECT_DIR }}/target/*.war

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Download WAR
        uses: actions/download-artifact@v4
        with:
          name: app-war
          path: .

      - name: Pick artifact
        id: pick
        run: |
          WAR=$(ls *.war | head -n1)
          echo "war_file=$WAR" >> $GITHUB_OUTPUT
          echo "war_basename=$(basename "$WAR")" >> $GITHUB_OUTPUT

      - name: Copy WAR to server (/tmp)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          source: ${{ steps.pick.outputs.war_file }}
          target: /tmp/

      - name: Deploy on remote (restart tomcat)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            set -e
            WAR_NAME="${{ steps.pick.outputs.war_basename }}"
            WEBAPPS="${{ secrets.PROD_TOMCAT_WEBAPPS }}"

            sudo mkdir -p "${WEBAPPS}/../releases"
            if [ -f "${WEBAPPS}/ROOT.war" ]; then
              TS=$(date +%Y%m%d%H%M%S)
              sudo cp -f "${WEBAPPS}/ROOT.war" "${WEBAPPS}/../releases/ROOT-${TS}.war" || true
            fi

            sudo systemctl stop ${{ secrets.PROD_TOMCAT_SERVICE }} || true
            sudo rm -rf "${WEBAPPS}/ROOT" "${WEBAPPS}/ROOT.war"
            sudo mv "/tmp/${WAR_NAME}" "${WEBAPPS}/ROOT.war"
            sudo chown -R tomcat:tomcat "${WEBAPPS}/ROOT.war"

            sudo systemctl start ${{ secrets.PROD_TOMCAT_SERVICE }}
            sleep 5
            sudo systemctl --no-pager status ${{ secrets.PROD_TOMCAT_SERVICE }} || true

      - name: Health check (HTTPS)
        run: |
          url="https://${{ secrets.PROD_DOMAIN }}/"
          for i in {1..30}; do
            code=$(curl -k -s -o /dev/null -w '%{http_code}' "$url")
            if [ "$code" = "200" ] || [ "$code" = "302" ]; then
              echo "OK ($code)"
              exit 0
            fi
            sleep 2
          done
          echo "Health check failed"; exit 1
