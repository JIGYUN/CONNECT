name: CI-CD (Build & Deploy to Tomcat - deploy user)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

# 프로젝트의 pom.xml 이 있는 하위 폴더명
env:
  PROJECT_DIR: CONNECT

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "8"
          cache: maven

      - name: Build (skip tests)
        working-directory: ${{ env.PROJECT_DIR }}
        run: mvn -B -DskipTests clean package

      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-war
          path: ${{ env.PROJECT_DIR }}/target/*.war

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download WAR
        uses: actions/download-artifact@v4
        with:
          name: app-war
          path: .

      - name: Pick artifact
        id: pick
        run: |
          set -e
          WAR=$(ls *.war | head -n1)
          echo "war_file=$WAR" >> $GITHUB_OUTPUT
          echo "war_basename=$(basename "$WAR")" >> $GITHUB_OUTPUT
          echo "Picked WAR: $WAR"

      - name: Copy WAR to server (/tmp)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          source: ${{ steps.pick.outputs.war_file }}
          target: /tmp/

      # 선택: 외부 Config.properties 내려주기 (env로 바인딩 → if에서 env 참조)
      - name: Put external Config.properties (optional)
        if: ${{ env.PROD_CONFIG_B64 != '' }}
        env:
          PROD_CONFIG_B64: ${{ secrets.PROD_CONFIG_B64 }}
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            set -e
            if [ -n "$PROD_CONFIG_B64" ]; then
              echo "$PROD_CONFIG_B64" | base64 -d > /home/${USER}/Config.properties
              chmod 600 /home/${USER}/Config.properties
              echo "[Config.properties] delivered to /home/${USER}/Config.properties"
            fi

      - name: Deploy by sudo wrapper (restart tomcat)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            set -e
            WAR_NAME="${{ steps.pick.outputs.war_basename }}"
            echo "Deploying /tmp/${WAR_NAME}"
            sudo /usr/local/bin/deploy_tomcat.sh "/tmp/${WAR_NAME}"

      - name: Health check (HTTPS)
        run: |
          url="https://${{ secrets.PROD_DOMAIN }}/"
          echo "Health check: $url"
          for i in {1..30}; do
            code=$(curl -k -s -o /dev/null -w '%{http_code}' "$url")
            echo "try #$i => $code"
            if [ "$code" = "200" ] || [ "$code" = "302" ]; then
              echo "OK ($code)"
              exit 0
            fi
            sleep 2
          done
          echo "Health check failed"
          exit 1
